CLEAR SCREEN;
SET SERVEROUTPUT ON;
SET VERIFY OFF;

DROP TABLE Host_info CASCADE CONSTRAINTS;
DROP TABLE Player_info CASCADE CONSTRAINTS;
DROP TABLE Question_Gallery1 CASCADE CONSTRAINTS;
DROP TABLE Question_Gallery2 CASCADE CONSTRAINTS;
DROP TABLE Option_List CASCADE CONSTRAINTS;
DROP TABLE Answer_List CASCADE CONSTRAINTS;
DROP TABLE Round_info CASCADE CONSTRAINTS;
DROP TABLE Asking1 CASCADE CONSTRAINTS;
DROP TABLE Asking2 CASCADE CONSTRAINTS;
DROP TABLE Answer1 CASCADE CONSTRAINTS;
DROP TABLE Answer2 CASCADE CONSTRAINTS;
DROP TABLE Answer3 CASCADE CONSTRAINTS;
DROP TABLE Answer4 CASCADE CONSTRAINTS;
DROP TABLE Score CASCADE CONSTRAINTS;

CREATE TABLE Host_info(HID INTEGER, NAME VARCHAR2(50), AGE INTEGER, GENDER VARCHAR2(10), MOBILE INTEGER,
					   PRIMARY KEY(HID));

CREATE TABLE Player_info(PID INTEGER, NAME VARCHAR2(50), AGE INTEGER, GENDER VARCHAR2(10), MOBILE INTEGER,
					   PRIMARY KEY(PID));

CREATE TABLE Round_info(RID INTEGER, ROUND_NAME VARCHAR2(50),
					    PRIMARY KEY (RID));

CREATE TABLE Option_List(OID INTEGER, OP1 VARCHAR2(25), OP2 VARCHAR2(25), OP3 VARCHAR2(25), OP4 VARCHAR2(25),
					     PRIMARY KEY (OID));

CREATE TABLE Question_Gallery1(QID INTEGER, RID INTEGER, MARKS INTEGER, QUESTION VARCHAR2(500), OID INTEGER,
							   PRIMARY KEY(QID), FOREIGN KEY (RID) REFERENCES Round_info (RID),
							   FOREIGN KEY (OID) REFERENCES Option_List (OID));

CREATE TABLE Question_Gallery2(QID INTEGER, RID INTEGER, MARKS INTEGER, QUESTION VARCHAR2(500), OID INTEGER,
							   PRIMARY KEY (QID), FOREIGN KEY (RID) REFERENCES Round_info (RID),
							   FOREIGN KEY (OID) REFERENCES Option_List (OID));

CREATE TABLE Answer_List(QID INTEGER, ANSWER INTEGER,
						 FOREIGN KEY (QID) REFERENCES Question_Gallery1 (QID));

CREATE TABLE Asking1(QID INTEGER, PID INTEGER, RID INTEGER,
					 FOREIGN KEY (QID) REFERENCES Question_Gallery1 (QID), 
					 FOREIGN KEY (PID) REFERENCES Player_info (PID),
					 FOREIGN KEY (RID) REFERENCES Round_info (RID));

CREATE TABLE Asking2(QID INTEGER, MARKS INTEGER, QUESTION VARCHAR2(500),
					 FOREIGN KEY (QID) REFERENCES Question_Gallery1 (QID));
					 
CREATE TABLE Answer1(QID INTEGER, GIVEN_ANSWER INTEGER,
					 FOREIGN KEY (QID) REFERENCES Question_Gallery1 (QID));
					 
CREATE TABLE Answer2(QID INTEGER, GIVEN_ANSWER INTEGER,
					 FOREIGN KEY (QID) REFERENCES Question_Gallery1 (QID));
					 
CREATE TABLE Answer3(QID INTEGER, RESULT_STATUS VARCHAR2(15),
					 FOREIGN KEY (QID) REFERENCES Question_Gallery1 (QID));
					 
CREATE TABLE Answer4(QID INTEGER, RESULT_STATUS VARCHAR2(15),
					 FOREIGN KEY (QID) REFERENCES Question_Gallery1 (QID));
					 
CREATE TABLE Score(QID INTEGER, GAIN INTEGER, TOTAL_SCORE INTEGER,
					 FOREIGN KEY (QID) REFERENCES Question_Gallery1 (QID));
					 

CREATE OR REPLACE TRIGGER HOST_INFO_INPUT
BEFORE INSERT ON Host_info
DECLARE
BEGIN
	DBMS_OUTPUT.PUT_LINE('THE HOST INFO HAS BEEN ADDED');
END;
/

ACCEPT A CHAR PROMPT "HOST NAME : ";
ACCEPT B NUMBER PROMPT "AGE : ";
ACCEPT C NUMBER PROMPT "GENDER : 1. MALE	2. FEMALE	??? ";
ACCEPT D NUMBER PROMPT "MOBILE : ";
	
BEGIN
	
	DELETE FROM Host_info;
	IF (&C = 1) THEN
		INSERT INTO Host_info VALUES(1001, '&A', &B, 'MALE', &D);
	ELSIF (&C = 2) THEN
		INSERT INTO Host_info VALUES(1001, '&A', &B, 'FEMALE', &D);
	END IF;
	
END;
/

CREATE OR REPLACE TRIGGER PLAYER_INFO_INPUT
BEFORE INSERT ON Player_info
DECLARE
BEGIN
	DBMS_OUTPUT.PUT_LINE('THE PLAYER INFO HAS BEEN ADDED');
END;
/

ACCEPT E CHAR PROMPT "PLAYER NAME : ";
ACCEPT F NUMBER PROMPT "AGE : ";
ACCEPT G NUMBER PROMPT "GENDER : 1. MALE	2. FEMALE	??? ";
ACCEPT H NUMBER PROMPT "MOBILE : ";
	
BEGIN
	
	DELETE FROM Player_info;
	IF (&G = 1) THEN
		INSERT INTO Player_info VALUES(10001, '&E', &F, 'MALE', &H);
	ELSIF (&G = 2) THEN
		INSERT INTO Player_info VALUES(10001, '&E', &F, 'FEMALE', &H);
	END IF;

END;
/

INSERT INTO Round_info VALUES(1011, 'SIMPLE');
INSERT INTO Round_info VALUES(1012, 'LIGHTEN');
INSERT INTO Round_info VALUES(1013, 'FREEGY');

INSERT INTO Option_List VALUES(101, 'Mr. A', 'Mr. B', 'Mr. C', 'OTHERS');
INSERT INTO Option_List VALUES(102, '21', '22', '23', 'OTHERS');
INSERT INTO Option_List VALUES(103, 'PLAYING', 'TRAVELLING', 'SLEEPING', 'OTHERS');
INSERT INTO Option_List VALUES(104, 'DOCTOR', 'ENGINEER', 'TEACHER', 'OTHERS');
INSERT INTO Option_List VALUES(105, 'NOT SO GOOD', 'BAD', 'VERY BAD', 'ALHAMDULILLAH, FINE');

INSERT INTO Question_Gallery1 VALUES(1, 1011, 4, 'WHAT IS YOUR NAME ?', 101);
INSERT INTO Question_Gallery1 VALUES(2, 1012, 6, 'HOW IS YOUR AGE ?', 102);
INSERT INTO Question_Gallery1 VALUES(3, 1012, 6, 'WHAT IS YOUR HOBBY ?', 103);
INSERT INTO Question_Gallery1 VALUES(4, 1013, 12, 'WHAT IS YOUR AIM ?', 104);
INSERT INTO Question_Gallery1 VALUES(5, 1013, 12, 'HOW ARE YOU ?', 105);

INSERT INTO Question_Gallery2 VALUES(1, 1011, 4, 'WHAT IS YOUR NAME ?', 101);
INSERT INTO Question_Gallery2 VALUES(2, 1012, 6, 'HOW IS YOUR AGE ?', 102);
INSERT INTO Question_Gallery2 VALUES(3, 1012, 6, 'WHAT IS YOUR HOBBY ?', 103);
INSERT INTO Question_Gallery2 VALUES(4, 1013, 12, 'WHAT IS YOUR AIM ?', 104);
INSERT INTO Question_Gallery2 VALUES(5, 1013, 12, 'HOW ARE YOU ?', 105);

INSERT INTO Answer_List VALUES(1, 1);
INSERT INTO Answer_List VALUES(2, 3);
INSERT INTO Answer_List VALUES(3, 2);
INSERT INTO Answer_List VALUES(4, 2);
INSERT INTO Answer_List VALUES(5, 4);
/*
BEGIN	
	FOR M IN (SELECT * FROM Question_Gallery1) LOOP
		INSERT INTO Question_Gallery2 VALUES(M.QID, M.RID, M.MARKS, M.QUESTION, M.OID);
	END LOOP;
END;
/
*/

--SELECT * FROM Host_info;
--SELECT * FROM Player_info;
/*SELECT * FROM Question_Gallery1;
SELECT * FROM Question_Gallery2;
SELECT * FROM Option_List;
SELECT * FROM Answer_List;
SELECT * FROM Round_info;
/*SELECT * FROM Asking1;
--SELECT * FROM Asking2@SITE_LINK;
SELECT * FROM Answer1;
SELECT * FROM Answer2;
--SELECT * FROM Answer3@SITE_LINK;
--SELECT * FROM Answer4@SITE_LINK;
SELECT * FROM Score;*/

COMMIT;